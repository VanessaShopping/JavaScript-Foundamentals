// Стринговете са immutable. Тоест те са read only . Не можем да сменим един чарактър с друг
// Strings не можем да ги revers-нем. Трябва преди това да го направим на масив от чарактъри с функцията split
//              String Operations
// str.indexOf("чар или дума", "допълнителен параметър. число от където да почнем да търсим в стринга. От кой индекс") Връща индекса на първичт чар от думата
// str.substr(start, lenghtOptional) -> взема част от стринга. Първия параметър показва от кой индекс да започнем. Втория колко елемента да вземем


let str = "I am JavaScript Developer";
console.log(str.substr(5,10)); // Не променя оригиналния стринг. Тук можем да зададем старта отрицателен. Ще брой отзад напред
console.log(str.substring(5,15)); // Разлиакта е ,че тук казваме от кой до кой индекс да вземем.


let js = "I Like     JS";
console.log(js);
// Split разбива стринга на чарактъри и го прави на масив.
js = js.split(" ");
js = js.filter(c => c!=""); // Вземи всичко което не е празно. Тоест премахваме интервалите. Това лесно можем да го избегнем с РегЕкс
console.log(js.join(" "));

// str.replace("Кое" , "С какво") - първия параментър показва кое от стринга искаме да заменим. Втория с какво искаме да го заменим
let repl = "I Like JS. JS is COOL. JS is awesome. This is JS. JS is programming language. Js js JS case sensitive";
console.log(repl.replace("JS", "C#")); // case sensitive !!!
// Проблема е ,че замененя само първото срещнато съвпадение. Ако искаме да заменим всички съвпадения единствения вариянт е РегЕкс
console.log(repl.replace(/JS/g, "C#"));

                            // Regular Expresion

// Phone numbers RegEx  \B\+\d{1,3}([ -]*[0-9]){6,}\b => +359 2 123-456
// Email RegEx      /^[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,20}$/i
// Split Town Search  towns.split(/\s*[.,|'\n\t-]+\s*/)

// Групи. групи се създават с (). ([a-zA-Z]) ([0-9])    Първата група ще е на 1 позиция втората група на 2-ра. Всичко се записва в масив.
// В този масив на Нулева позиция ще е целия регекс. т.е.
// Ако имаме съвпадение по дадения регекс на 0 ще се запише съвпадението , а на 1,2,3,4.... групите
// в ecmascript 2018 ще има възможност групите да ги наименоваме за по лесен достъп.
// [0-9]{2,4} ще върне съвпадени само ако цифрите са от 2 до 4. => 1234-вярно 1-невярно 12345-невярно
// Ако зададен само един параметър означава ,че ще върне точно толкова колкото сме задали
            // {2} -> ще има съвпадение само ако символите са 2 на брой
            // {2,} -> когато има запетая казваме ,че искаме 2 или повече символа

// Разлика между match и exec
    // match връща масив от елементите.
    // exec връща пак масив, но на индекс 0 е цялото съвпадение , а на 1,2,3,4... са групите










